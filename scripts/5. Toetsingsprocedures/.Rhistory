l = model$parameter
chisq = model$statistic
g <- qchisq(p = 1 - alpha, df = l - 1)
# Plot the chi-squared density function
x <- seq(0, g*1.5, length = 1000)
dist <- dchisq(x, df = l - 1)
plot (x, dist, type = 'l', xlab = '', ylab = '')
# The acceptance region (where H_0 is accepted)
i <- x <= g
polygon(c(x[i],    g,                     g),
c(dist[i], dchisq(g, df = l - 1), 0),
col = 'lightgreen')
text(x = g, y = dchisq(g, df = l-1)/2, paste('g = ', round(g, digits=2)))
# The test statistic (chi squared)
abline(v = chisq, col = 'red')
text(x = chisq, y = mean(dist), paste('chi^2 = ', round(chisq, digits=2)))
## uitleg bij de grafiek.
title(main="Chi^2-test")
if(chisq > g){
title(sub="Verwerpen!", col.sub="red")
}else{
title(sub="Aanvaarden", col.sub="green")
}
rm(list=ls())
cat("\014")
dev.off()
library(lsr)
# ================================== Chi-kwadraat ~ Cramer's V regressie ===================================
# --------------------------------------------- Input Gegevens ---------------------------------------------
#ncol= aantalkolommen! GEEN Totalen! Doet hij van zelf!
data = matrix(c(10,20,10,5,20,15,20,0), ncol=4) #Kolom per kolom afgaan. Niet rij per rij!
alpha <- 0.05
rownames(data) = c("Man","Vrouw")
colnames(data) =c("Merceds", "BMW","Porsche","Alfa Romeo")
# ---------------------------------------------- Berekeningen ----------------------------------------------
# --------------------- KRUISTABEL ---------------------
tabelZonderMarginalen = as.table(data);
table = as.table(data)
print('KRUISTABEL')
addmargins(table)
# --------------------- KRUISTABEL MET SCHATTER ---------------------
model = chisq.test(tabelZonderMarginalen)
print('KRUISTABEL MET SCHATTER')
model$expected
# --------------------- KWADRATISCHE, GENORMEERDE KRUISTABEL  --------------------
print('KWADRATISCHE GENORMEERDE KRUISTABEL')
model$residuals^2
# --------------------- CHI-KWADRAAT --------------------
print('CHI-KWADRAAT')
model$statistic
# --------------------- cramer's V --------------------
print('Cramers V')
v = sqrt(model$statistic/(margin.table(tabelZonderMarginalen)*(min(nrow(tabelZonderMarginalen),ncol(tabelZonderMarginalen))-1)))
cramersV(tabelZonderMarginalen)
if(v == 0){
print('Geen samenhang')
}
if(0 < v & v <=0.1){
print('Geen samenhang ~ zwakke samengang')
}
if(0.1 < v & v <=0.25){
print('zwakke samenhang ~ redelijke sterke samenhang')
}
if(0.25 < v & v <=0.5){
print('redelijke sterke samenhang ~ sterke samenhang')
}
if(0.5 < v & v <=0.75){
print('sterke samenhang ~ zeer sterke samenhang')
}
if(0.75 < v & v <1){
print('zeer sterke samenhang ~ volledige samenhang')
}
if(v == 1){
print('volledige samenhang')
}
# --------------------- plot --------------------
l = model$parameter
chisq = model$statistic
g <- qchisq(p = 1 - alpha, df = l)
# Plot the chi-squared density function
x <- seq(0, g*1.5, length = 1000)
dist <- dchisq(x, df = l)
plot (x, dist, type = 'l', xlab = '', ylab = '')
# The acceptance region (where H_0 is accepted)
i <- x <= g
polygon(c(x[i],    g,                     g),
c(dist[i], dchisq(g, df = l), 0),
col = 'lightgreen')
text(x = g, y = dchisq(g, df = l)/2, paste('g = ', round(g, digits=2)))
# The test statistic (chi squared)
abline(v = chisq, col = 'red')
text(x = chisq, y = mean(dist), paste('chi^2 = ', round(chisq, digits=2)))
## uitleg bij de grafiek.
title(main="Chi^2-test")
if(chisq > g){
title(sub="Verwerpen!", col.sub="red")
}else{
title(sub="Aanvaarden", col.sub="green")
}
# Clearen: plot, console, environment
rm(list=ls())
cat("\014")
dev.off()
library(lsr)
# ======================================== Covariantië en corrolatie =======================================
# --------------------------------------------- Input Gegevens ---------------------------------------------
data <- read.csv("/Users/matthiaswarnez/Dropbox/Matthias/School/Hogent/TI - 2/2de semester/Onderzoekstechnieken/onderzoekstechnieken-cursus/cursus/data/families.txt", sep ="")
x = data$x
y = data$y
# ---------------------------------------------- Berekeningen ----------------------------------------------
mx <- mean(x)
my <- mean(y)
plot(x,y)
abline(h = my, col = 'red')
abline(v = mx, col = 'red')
print("Covariantie")
cov(x, y)
print("Corolatiecoëfficient")
correlation = cor(x, y)
correlation
print("Determinatiecoëfficient")
correlation^2
data <- read.csv("/Users/matthiaswarnez/Dropbox/Matthias/School/Hogent/TI - 2/2de semester/Onderzoekstechnieken/onderzoekstechnieken-cursus/oefeningen/data/hfst6_2variabelen/Pizza.csv", sep ="")
data <- read.csv("/Users/matthiaswarnez/Dropbox/Matthias/School/Hogent/TI - 2/2de semester/Onderzoekstechnieken/onderzoekstechnieken-cursus/oefeningen/data/hfst6_2variabelen/Pizza.csv", sep ="")
View(data)
View(data)
data <- read.csv("/Users/matthiaswarnez/Dropbox/Matthias/School/Hogent/TI - 2/2de semester/Onderzoekstechnieken/onderzoekstechnieken-cursus/oefeningen/data/hfst6_2variabelen/Pizza.csv", sep =",")
data <- read.csv("/Users/matthiaswarnez/Dropbox/Matthias/School/Hogent/TI - 2/2de semester/Onderzoekstechnieken/onderzoekstechnieken-cursus/oefeningen/data/hfst6_2variabelen/Pizza.csv", sep =",")
View(data)
View(data)
data <- read.csv("/Users/matthiaswarnez/Dropbox/Matthias/School/Hogent/TI - 2/2de semester/Onderzoekstechnieken/onderzoekstechnieken-cursus/oefeningen/data/hfst6_2variabelen/Pizza.csv", sep =",")
View(data)
View(data)
# Clearen: plot, console, environment
rm(list=ls())
cat("\014")
dev.off()
library(lsr)
# ======================================== Covariantië en corrolatie =======================================
# --------------------------------------------- Input Gegevens ---------------------------------------------
data <- read.csv("/Users/matthiaswarnez/Dropbox/Matthias/School/Hogent/TI - 2/2de semester/Onderzoekstechnieken/onderzoekstechnieken-cursus/oefeningen/data/hfst6_2variabelen/Pizza.csv", sep =",")
x = data$CostPerSlice
y = data$Rating
# ---------------------------------------------- Berekeningen ----------------------------------------------
mx <- mean(x)
my <- mean(y)
plot(x,y)
abline(h = my, col = 'red')
abline(v = mx, col = 'red')
print("Covariantie")
cov(x, y)
print("Corolatiecoëfficient")
correlation = cor(x, y)
correlation
print("Determinatiecoëfficient")
correlation^2
data = na.omit(data)
# Clearen: plot, console, environment
rm(list=ls())
cat("\014")
dev.off()
library(lsr)
# ======================================== Covariantië en corrolatie =======================================
# --------------------------------------------- Input Gegevens ---------------------------------------------
data <- read.csv("/Users/matthiaswarnez/Dropbox/Matthias/School/Hogent/TI - 2/2de semester/Onderzoekstechnieken/onderzoekstechnieken-cursus/oefeningen/data/hfst6_2variabelen/Pizza.csv", sep =",")
data = na.omit(data)
x = data$CostPerSlice
y = data$Rating
# ---------------------------------------------- Berekeningen ----------------------------------------------
mx <- mean(x)
my <- mean(y)
plot(x,y)
abline(h = my, col = 'red')
abline(v = mx, col = 'red')
print("Covariantie")
cov(x, y)
print("Corolatiecoëfficient")
correlation = cor(x, y)
correlation
print("Determinatiecoëfficient")
correlation^2
# Clearen: plot, console, environment
rm(list=ls())
cat("\014")
dev.off()
library(lsr)
# ========================================== Lineaire regressie  ===========================================
# --------------------------------------------- Input Gegevens ---------------------------------------------
data <- read.csv("/Users/matthiaswarnez/Dropbox/Matthias/School/Hogent/TI - 2/2de semester/Onderzoekstechnieken/onderzoekstechnieken-cursus/oefeningen/data/hfst6_2variabelen/Pizza.csv", sep =",")
data = na.omit(data)
afhankelijkeVar = data$CostPerSlice
onafhanekelijkeVar = data$Rating
# ---------------------------------------------- Berekeningen ----------------------------------------------
#Manier 1
# mx <- mean(onafhanekelijkeVar)  # gemiddelde van x
# my <- mean(afhankelijkeVar)  # gemiddelde van y
# xx <- onafhanekelijkeVar - mx   # x - mx
# yy <- afhankelijkeVar - my   # y - my
# beta_1 <- sum(xx * yy) / sum(xx^2)
# beta_0 <- my - beta_1 * mx
#
# plot(x = onafhanekelijkeVar, y = afhankelijkeVar,
#        xlab = "Protein content (%)",
#        ylab = "Weight gain (g)")
# abline(a = beta_0,  # snijpunt y-as
#        b = beta_1,  # richtingscoëfficiënt
#        col = 'red')
#Manier 2
#AFHANKELIJK - ONAFHANKELIJK!
lm(afhankelijkeVar ~ onafhanekelijkeVar)
plot(x = onafhanekelijkeVar, xlab = "Protein content (%)",
y = afhankelijkeVar, ylab = "Weight gain (g)")
regression <- lm(afhankelijkeVar ~ onafhanekelijkeVar)
abline(regression,
col = 'red')
# Clearen: plot, console, environment
rm(list=ls())
cat("\014")
dev.off()
library(lsr)
# ========================================== Lineaire regressie  ===========================================
# --------------------------------------------- Input Gegevens ---------------------------------------------
data <- read.csv("/Users/matthiaswarnez/Dropbox/Matthias/School/Hogent/TI - 2/2de semester/Onderzoekstechnieken/onderzoekstechnieken-cursus/oefeningen/data/hfst6_2variabelen/Pizza.csv", sep =",")
data = na.omit(data)
afhankelijkeVar = data$Rating
onafhanekelijkeVar = data$CostPerSlice
# ---------------------------------------------- Berekeningen ----------------------------------------------
#Manier 1
# mx <- mean(onafhanekelijkeVar)  # gemiddelde van x
# my <- mean(afhankelijkeVar)  # gemiddelde van y
# xx <- onafhanekelijkeVar - mx   # x - mx
# yy <- afhankelijkeVar - my   # y - my
# beta_1 <- sum(xx * yy) / sum(xx^2)
# beta_0 <- my - beta_1 * mx
#
# plot(x = onafhanekelijkeVar, y = afhankelijkeVar,
#        xlab = "Protein content (%)",
#        ylab = "Weight gain (g)")
# abline(a = beta_0,  # snijpunt y-as
#        b = beta_1,  # richtingscoëfficiënt
#        col = 'red')
#Manier 2
#AFHANKELIJK - ONAFHANKELIJK!
lm(afhankelijkeVar ~ onafhanekelijkeVar)
plot(x = onafhanekelijkeVar, xlab = "Protein content (%)",
y = afhankelijkeVar, ylab = "Weight gain (g)")
regression <- lm(afhankelijkeVar ~ onafhanekelijkeVar)
abline(regression,
col = 'red')
# Clearen: plot, console, environment
rm(list=ls())
cat("\014")
dev.off()
library(lsr)
# ======================================== Covariantië en corrolatie =======================================
# --------------------------------------------- Input Gegevens ---------------------------------------------
data <- read.csv("/Users/matthiaswarnez/Dropbox/Matthias/School/Hogent/TI - 2/2de semester/Onderzoekstechnieken/onderzoekstechnieken-cursus/oefeningen/data/hfst6_2variabelen/Pizza.csv", sep =",")
data = na.omit(data)
x = data$CostPerSlice
y = data$Rating
# ---------------------------------------------- Berekeningen ----------------------------------------------
mx <- mean(x)
my <- mean(y)
plot(x,y)
abline(h = my, col = 'red')
abline(v = mx, col = 'red')
print("Covariantie")
cov(x, y)
print("Corolatiecoëfficient")
correlation = cor(x, y)
correlation
print("Determinatiecoëfficient")
correlation^2
data <- read.csv("/Users/matthiaswarnez/Dropbox/Matthias/School/Hogent/TI - 2/2de semester/Onderzoekstechnieken/onderzoekstechnieken-cursus/oefeningen/data/hfst6_2variabelen/Cats.csv", sep =",")
data = na.omit(data)
View(data)
View(data)
# Clearen: plot, console, environment
rm(list=ls())
cat("\014")
dev.off()
library(lsr)
# ======================================== Covariantië en corrolatie =======================================
# --------------------------------------------- Input Gegevens ---------------------------------------------
data <- read.csv("/Users/matthiaswarnez/Dropbox/Matthias/School/Hogent/TI - 2/2de semester/Onderzoekstechnieken/onderzoekstechnieken-cursus/oefeningen/data/hfst6_2variabelen/Cats.csv", sep =",")
data = na.omit(data)
x = data$Sex
y = data$Hwt
# ---------------------------------------------- Berekeningen ----------------------------------------------
mx <- mean(x)
my <- mean(y)
plot(x,y)
abline(h = my, col = 'red')
abline(v = mx, col = 'red')
print("Covariantie")
cov(x, y)
print("Corolatiecoëfficient")
correlation = cor(x, y)
correlation
print("Determinatiecoëfficient")
correlation^2
# Clearen: plot, console, environment
rm(list=ls())
cat("\014")
dev.off()
library(lsr)
# ======================================== Covariantië en corrolatie =======================================
# --------------------------------------------- Input Gegevens ---------------------------------------------
data <- read.csv("/Users/matthiaswarnez/Dropbox/Matthias/School/Hogent/TI - 2/2de semester/Onderzoekstechnieken/onderzoekstechnieken-cursus/oefeningen/data/hfst6_2variabelen/Cats.csv", sep =",")
data = na.omit(data)
x = data$Sex
y = data$Bwt
# ---------------------------------------------- Berekeningen ----------------------------------------------
mx <- mean(x)
my <- mean(y)
plot(x,y)
abline(h = my, col = 'red')
abline(v = mx, col = 'red')
print("Covariantie")
cov(x, y)
print("Corolatiecoëfficient")
correlation = cor(x, y)
correlation
print("Determinatiecoëfficient")
correlation^2
# Clearen: plot, console, environment
rm(list=ls())
cat("\014")
dev.off()
library(lsr)
# ======================================== Covariantië en corrolatie =======================================
# --------------------------------------------- Input Gegevens ---------------------------------------------
data <- read.csv("/Users/matthiaswarnez/Dropbox/Matthias/School/Hogent/TI - 2/2de semester/Onderzoekstechnieken/onderzoekstechnieken-cursus/oefeningen/data/hfst6_2variabelen/Cats.csv", sep =",")
data = na.omit(data)
x = data$Hwt
y = data$Bwt
# ---------------------------------------------- Berekeningen ----------------------------------------------
mx <- mean(x)
my <- mean(y)
plot(x,y)
abline(h = my, col = 'red')
abline(v = mx, col = 'red')
print("Covariantie")
cov(x, y)
print("Corolatiecoëfficient")
correlation = cor(x, y)
correlation
print("Determinatiecoëfficient")
correlation^2
regression <- lm(y ~ x)
# Clearen: plot, console, environment
rm(list=ls())
cat("\014")
dev.off()
library(lsr)
# ======================================== Covariantië en corrolatie =======================================
# --------------------------------------------- Input Gegevens ---------------------------------------------
data <- read.csv("/Users/matthiaswarnez/Dropbox/Matthias/School/Hogent/TI - 2/2de semester/Onderzoekstechnieken/onderzoekstechnieken-cursus/oefeningen/data/hfst6_2variabelen/Cats.csv", sep =",")
data = na.omit(data)
x = data$Hwt
y = data$Bwt
# ---------------------------------------------- Berekeningen ----------------------------------------------
mx <- mean(x)
my <- mean(y)
plot(x,y)
abline(h = my, col = 'red')
abline(v = mx, col = 'red')
print("Covariantie")
cov(x, y)
regression <- lm(y ~ x)
regression <- lm(afhankelijkeVar ~ onafhanekelijkeVar)
print("Corolatiecoëfficient")
correlation = cor(x, y)
correlation
print("Determinatiecoëfficient")
correlation^2
# Clearen: plot, console, environment
rm(list=ls())
cat("\014")
dev.off()
library(lsr)
# ======================================== Covariantië en corrolatie =======================================
# --------------------------------------------- Input Gegevens ---------------------------------------------
data <- read.csv("/Users/matthiaswarnez/Dropbox/Matthias/School/Hogent/TI - 2/2de semester/Onderzoekstechnieken/onderzoekstechnieken-cursus/oefeningen/data/hfst6_2variabelen/Cats.csv", sep =",")
data = na.omit(data)
x = data$Hwt
y = data$Bwt
# ---------------------------------------------- Berekeningen ----------------------------------------------
mx <- mean(x)
my <- mean(y)
plot(x,y)
abline(h = my, col = 'red')
abline(v = mx, col = 'red')
print("Covariantie")
cov(x, y)
regression <- lm(y ~ x)
abline(regression,
col = 'red')
print("Corolatiecoëfficient")
correlation = cor(x, y)
correlation
print("Determinatiecoëfficient")
correlation^2
# Clearen: plot, console, environment
rm(list=ls())
cat("\014")
dev.off()
library(lsr)
# ======================================== Covariantië en corrolatie =======================================
# --------------------------------------------- Input Gegevens ---------------------------------------------
data <- read.csv("/Users/matthiaswarnez/Dropbox/Matthias/School/Hogent/TI - 2/2de semester/Onderzoekstechnieken/onderzoekstechnieken-cursus/oefeningen/data/hfst6_2variabelen/Cats.csv", sep =",")
data = na.omit(data)
x = data$Hwt
y = data$Bwt
# ---------------------------------------------- Berekeningen ----------------------------------------------
mx <- mean(x)
my <- mean(y)
plot(x,y)
abline(h = my, col = 'red')
abline(v = mx, col = 'red')
print("Covariantie")
cov(x, y)
regression <- lm(y ~ x)
abline(regression,
col = 'blue')
print("Corolatiecoëfficient")
correlation = cor(x, y)
correlation
print("Determinatiecoëfficient")
correlation^2
# Clearen: plot, console, environment
rm(list=ls())
cat("\014")
dev.off()
library(lsr)
# ======================================== Covariantië en corrolatie =======================================
# --------------------------------------------- Input Gegevens ---------------------------------------------
data <- read.csv("/Users/matthiaswarnez/Dropbox/Matthias/School/Hogent/TI - 2/2de semester/Onderzoekstechnieken/onderzoekstechnieken-cursus/oefeningen/data/hfst6_2variabelen/Pizza.csv", sep =",")
data = na.omit(data)
x = data$Hwt
y = data$Bwt
# ---------------------------------------------- Berekeningen ----------------------------------------------
mx <- mean(x)
my <- mean(y)
plot(x,y)
abline(h = my, col = 'red')
abline(v = mx, col = 'red')
print("Covariantie")
cov(x, y)
regression <- lm(y ~ x)
abline(regression,
col = 'blue')
print("Corolatiecoëfficient")
correlation = cor(x, y)
correlation
print("Determinatiecoëfficient")
correlation^2
# Clearen: plot, console, environment
rm(list=ls())
cat("\014")
dev.off()
library(lsr)
# ======================================== Covariantië en corrolatie =======================================
# --------------------------------------------- Input Gegevens ---------------------------------------------
data <- read.csv("/Users/matthiaswarnez/Dropbox/Matthias/School/Hogent/TI - 2/2de semester/Onderzoekstechnieken/onderzoekstechnieken-cursus/oefeningen/data/hfst6_2variabelen/Pizza.csv", sep =",")
data = na.omit(data)
x = data$CostPerSlice
y = data$Rating
# ---------------------------------------------- Berekeningen ----------------------------------------------
mx <- mean(x)
my <- mean(y)
plot(x,y)
abline(h = my, col = 'red')
abline(v = mx, col = 'red')
print("Covariantie")
cov(x, y)
regression <- lm(y ~ x)
abline(regression,
col = 'blue')
print("Corolatiecoëfficient")
correlation = cor(x, y)
correlation
print("Determinatiecoëfficient")
correlation^2
# Clearen: plot, console, environment
rm(list=ls())
cat("\014")
dev.off()
library(lsr)
# ======================================== Covariantië en corrolatie =======================================
# --------------------------------------------- Input Gegevens ---------------------------------------------
data <- read.csv("/Users/matthiaswarnez/Dropbox/Matthias/School/Hogent/TI - 2/2de semester/Onderzoekstechnieken/onderzoekstechnieken-cursus/cursus/data/families.txt", sep ="")
# X - onafhankelijke var
x = data$x
# Y - afhankelijke var
y = data$y
# ---------------------------------------------- Berekeningen ----------------------------------------------
mx <- mean(x)
my <- mean(y)
plot(x,y)
abline(h = my, col = 'red')
abline(v = mx, col = 'red')
print("Covariantie")
cov(x, y)
print("Corolatiecoëfficient")
correlation = cor(x, y)
correlation
regression <- lm(y ~ x)
abline(regression,
col = 'blue')
print("Determinatiecoëfficient")
correlation^2
